name: Rust CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
# This will ensure that only one commit will be running tests at a time on each PR.
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    # Run on external PRs and pushes to branches on the repo
    # This is to avoid double running on PRs from internal branches
    if: github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        rust: [ stable ] #, nightly ]
        os: [ ubuntu-latest ] #, macos-latest, windows-latest ]

    name: Build & test
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache Cargo registry
        uses: Swatinem/rust-cache@v2

      - name: Install dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev

      - name: Build
        run: cargo +${{ matrix.rust }} build
        working-directory: src-tauri

      - name: Test
        run: cargo +${{ matrix.rust }} test --all-features
        working-directory: src-tauri

  tauri:
    # Run on external PRs and pushes to branches on the repo
    # This is to avoid double running on PRs from internal branches
    if: github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        rust: [ stable ] #, nightly ]
        os: [ ubuntu-latest ] #, macos-latest, windows-latest ]

    name: Build Tauri
    runs-on: ${{ matrix.os }}
    needs: [ "build" ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Install frontend dependencies
        run: yarn install

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache Cargo registry
        uses: Swatinem/rust-cache@v2

      - name: Install tauri-cli
        uses: taiki-e/install-action@v2
        with:
          tool: tauri-cli

      - name: Build
        run: cargo +${{ matrix.rust }} tauri build -d --ci --no-bundle

  clippy:
    if: github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository

    name: Clippy lint checks
    runs-on: ubuntu-latest
    needs: [ "build" ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy

      - name: Cache Cargo registry
        uses: Swatinem/rust-cache@v2

      - name: Run clippy
        run: cargo clippy --no-deps --
        working-directory: src-tauri

  rustfmt:
    if: github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository

    name: Code formatting checks
    runs-on: ubuntu-latest
    needs: [ "build" ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Cache Cargo registry
        uses: Swatinem/rust-cache@v2

      - name: Run fmt
        run: cargo fmt --all -- --check
        working-directory: src-tauri

  machete:
    if: github.event_name == 'push' ||
      github.event.pull_request.head.repo.full_name != github.repository

    name: Machete dependencies checks
    runs-on: ubuntu-latest
    needs: [ "build" ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Cache Cargo registry
        uses: Swatinem/rust-cache@v2

      - name: Run cargo-machete
        uses: bnjbvr/cargo-machete@v0.8.0
